/*
* This file was generated by PolyTaint Truffle instrument created by Peterson Yuhala, IIUN
*
* The MIT License (MIT)
* Copyright (c) 2022 Peterson Yuhala
*
* Permission is hereby granted, free of charge, to any person obtaining a copy of this software
* and associated documentation files (the "Software"), to deal in the Software without restriction,
* including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
* subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all copies or substantial
* portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
* TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
* TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/


import org.graalvm.nativeimage.CurrentIsolate;
import org.graalvm.nativeimage.IsolateThread;
import org.graalvm.nativeimage.c.function.CEntryPoint;
import org.graalvm.polyglot.*;
import org.graalvm.polyglot.proxy.*;
import org.graalvm.polyglot.*;

public class Trusted {

    public static Context ctx = Context.newBuilder().allowAllAccess(true).build();
    public static void main(String[] args) {
        System.out.println("Hello Java from Code builder!!");
        Value ret = ctx.eval("js","function sayHello() {    console.log('++++++++++++ Hello from javascript file +++++++++++');}function funcA(paramA) {    var sec_int_a = Polyglot.eval(\"secureL\", \"function main() {return 10;}\");    var resC = 123 + 456 * 789 / 111 - sec_int_a;    var indirect_sec_int = 2 + funcN(sec_int_a, 2);    print('funcA: indirect sec int: ' + indirect_sec_int);}function funcD(paramD) {    console.log('funcD: ' + paramD);}function funcN(param, n) {    console.log('funcN: ' + param);    return param * n;}function funcM(param, m) {    console.log('funcM: ' + param);    return param / m;}function poly_2() {    var poly2_secInt = Polyglot.eval(\"secureL\", \"function main() {return 222;}\");    console.log('poly1_secInt: ' + poly2_secInt);}function poly_3() {    var poly3_secInt = Polyglot.eval(\"secureL\", \"function main() {return 333;}\");    console.log('poly3_secInt: ' + poly3_secInt);}sayHello();funcD(4);poly_2();funcA();");
    }
}
